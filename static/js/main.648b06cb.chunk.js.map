{"version":3,"sources":["api/axiosClient.js","api/zmp3/SongApi.js","env.js","features/songSlice/songSlice.js","components/ListItem/Item/Item.js","components/ListItem/ListItemComponent.js","components/Search/SearchComponent.js","components/Player/PlayerComponent.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["axiosClient","axios","create","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","response","status","data","error","SearchbyName","string","stringQuery","trim","get","getSongByName","createAsyncThunk","songName","songSlice","createSlice","name","initialState","currentSong","searchList","list","visibility","playList","reducers","addCurrentSong","state","action","payload","addSearchList","undefined","length","song","visibilitySearchList","extraReducers","fulfilled","songReducer","reducer","songSelector","actions","useStyles","makeStyles","root","display","height","width","detail","textAlign","padding","Item","artist","thumb","id","classes","dispath","useDispatch","Zoom","in","timeout","Grid","item","xs","sm","lg","xl","Paper","className","square","elevation","alt","src","Typography","style","textTransform","fontSize","whiteSpace","overflow","textOverflow","variant","component","Box","spacing","justifyContent","IconButton","aria-label","onClick","color","paddingTop","paddingBottom","ListItemComponent","useState","currentPage","setCurrentPage","pageCount","Math","ceil","start","end","listPagination","slice","container","map","i","Pagination","page","onChange","e","count","margin","borderRadius","SearchComponent","searchString","setSearchString","loading","setLoading","useSelector","handleSearch","preventDefault","search_key","marginBottom","onSubmit","TextField","value","target","label","minHeight","my","LinearProgress","CustomSlier","withStyles","position","left","Slider","CustomIconButton","PlayerComponent","currentTime","setCurrentTime","duration","setDuration","isPlay","setPlay","isLoop","setLoop","show","volume","setVolume","audioRef","useRef","Fade","loop","ref","onTimeUpdate","current","onEnded","onLoadedData","play","max","step","v","handleTimeSliderChange","Container","maxWidth","size","pause","bottom","background","orientation","event","App","AppBar","Toolbar","Menu","fontWeight","configureStore","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.648b06cb.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nconst axiosClient = axios.create({\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n  paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.status === 200 && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    throw error;\r\n  }\r\n);\r\n\r\n\r\nexport default axiosClient;","import axiosClient from \"../axiosClient\";\r\nimport { httpProxy } from \"../../env\";\r\n\r\n\r\nexport const SearchbyName = async (string) => {\r\n  try {\r\n    if (typeof string !== \"string\") {\r\n      return;\r\n    }\r\n    const stringQuery = string.trim();\r\n    const response = await axiosClient.get(\r\n      `${httpProxy}fetch/http://ac.mp3.zing.vn/complete?type=artist,song,key,code&num=500&query=${stringQuery}`\r\n    );\r\n    return response.data\r\n    // dispath(addSearchList(response.data));\r\n  } catch (error) {\r\n    throw error\r\n  }\r\n};\r\n","export const alloworigin = \"https://api.allorigins.win/raw?url=\";\r\nexport const proxy = \"https://thingproxy.freeboard.io/fetch/\";\r\nexport const whateverorigin = \"http://www.whateverorigin.org/get?url=\";\r\nexport const myProxy = \"https://proxy-306409.an.r.appspot.com/\"\r\nexport const localhost = \"http://localhost:3001/\";\r\nexport const httpProxy =\"https://httpproxy-306604.an.r.appspot.com/\"\r\n\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { SearchbyName } from \"../../api/zmp3/SongApi\";\r\n\r\nexport const getSongByName = createAsyncThunk(\r\n  \"song/getSongByName\",\r\n  async (songName) => {\r\n    try {\r\n      const response = await SearchbyName(songName);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nconst songSlice = createSlice({\r\n  name: \"song\",\r\n  initialState: {\r\n    currentSong: {},\r\n    searchList: {\r\n      list: [],\r\n      visibility: false,\r\n    },\r\n    playList: [],\r\n  },\r\n  reducers: {\r\n    addCurrentSong: (state, action) => {\r\n      state.currentSong = action.payload;\r\n    },\r\n    addSearchList: (state, action) => {\r\n      const { data } = action.payload;\r\n      if (data === undefined || data.length === 0) {\r\n        state.searchList.list = [];\r\n        return;\r\n      }\r\n\r\n      state.searchList.list = data[0].song ? data[0].song : [];\r\n    },\r\n    visibilitySearchList: (state) => {\r\n      state.searchList.visibility = true;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getSongByName.fulfilled]: (state, action) => {\r\n      const data = action.payload;\r\n      if (\r\n        data[0] === undefined ||\r\n        data[0].length === 0 ||\r\n        data[0].song === undefined\r\n      ) {\r\n        state.searchList.list = [];\r\n        return;\r\n      }\r\n\r\n      state.searchList.list = data[0].song ? data[0].song : [];\r\n    },\r\n  },\r\n});\r\n\r\n//action creator\r\n// export const getSongByName = (songName) => async (dispath) => {\r\n//     try {\r\n//         const response = await axios.get(`${httpProxy}fetch/http://ac.mp3.zing.vn/complete?type=artist,song,key,code&num=500&query=${songName}`)\r\n//         console.log(\"songList\", response);\r\n//         if (response.status === 200) {\r\n//             dispath(addSearchList(response.data));\r\n\r\n//         }\r\n\r\n//     }\r\n//     catch (e) {\r\n//         console.log('getSongErr', e);\r\n//     }\r\n// }\r\n\r\n//reducer\r\nconst songReducer = songSlice.reducer;\r\n\r\nexport const songSelector = (state) => state.song;\r\n\r\nexport const {\r\n  addCurrentSong,\r\n  addSearchList,\r\n  visibilitySearchList,\r\n} = songSlice.actions;\r\n\r\nexport default songReducer;\r\n","import {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Zoom,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport React from \"react\";\r\nimport { addCurrentSong } from \"../../../features/songSlice/songSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    height: 115,\r\n    width: `100%`,\r\n  },\r\n  detail: {\r\n    textAlign: \"start\",\r\n    padding: 6,\r\n  },\r\n});\r\n\r\nconst Item = ({ name, artist, thumb, id }) => {\r\n  const classes = useStyles();\r\n\r\n  const dispath = useDispatch();\r\n  const playSong = () => {\r\n    const currentSong = { id, name, artist, thumb };\r\n    dispath(addCurrentSong(currentSong));\r\n  };\r\n\r\n  return (\r\n    <Zoom\r\n      in={true}\r\n      timeout={1000}\r\n    >\r\n      <Grid item xs={12} sm={6} lg={4} xl={3}>\r\n        <Paper className={classes.root} square elevation={3}>\r\n          <Grid item xs={4}>\r\n            <img\r\n              height=\"115\"\r\n              alt=\"img\"\r\n              width=\"100%\"\r\n              src={\"https://photo-resize-zmp3.zadn.vn/w94_r1x1_jpeg/\" + thumb}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.detail} item xs={8}>\r\n            <Typography\r\n              style={{\r\n                textTransform: \"capitalize\",\r\n                fontSize: 22,\r\n                display: \"inline-block\",\r\n                whiteSpace: `nowrap`,\r\n                overflow: `hidden`,\r\n                width: `100%`,\r\n                textOverflow: `ellipsis`,\r\n              }}\r\n              variant=\"h6\"\r\n              component=\"h6\"\r\n            >\r\n              {name}\r\n            </Typography>\r\n            <Typography\r\n              style={{\r\n                fontSize: 14,\r\n                textTransform: \"capitalize\",\r\n                display: \"inline-block\",\r\n                whiteSpace: `nowrap`,\r\n                overflow: `hidden`,\r\n                width: `100%`,\r\n                textOverflow: `ellipsis`,\r\n              }}\r\n              variant=\"subtitle1\"\r\n            >\r\n              {artist}\r\n            </Typography>\r\n            <Box display=\"flex\" spacing={2} justifyContent=\"center\">\r\n              <IconButton aria-label=\"Play\" onClick={() => playSong()}>\r\n                <PlayCircleFilledIcon color=\"secondary\" />\r\n              </IconButton>\r\n              <IconButton aria-label=\"Add to playlist\">\r\n                <AddCircleIcon color=\"secondary\" />\r\n              </IconButton>\r\n              <IconButton aria-label=\"Download\">\r\n                <GetAppIcon color=\"secondary\" />\r\n              </IconButton>\r\n            </Box>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Zoom>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import { Box, Grid, makeStyles, Zoom } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Item from \"./Item/Item\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: `100%`,\r\n    paddingTop: 50,\r\n    paddingBottom: 50,\r\n    \"& ul\": {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n});\r\n\r\nconst ListItemComponent = ({ visibility, list }) => {\r\n  const classes = useStyles();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  //pagination\r\n  const itemInOnePage = 12;\r\n  const pageCount = Math.ceil(list.length / itemInOnePage);\r\n\r\n  const start = (currentPage - 1) * itemInOnePage;\r\n  const end = start + itemInOnePage;\r\n\r\n  const listPagination = list.slice(start, end);\r\n\r\n  const paginationHandler = (e, page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {visibility && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div style={{ width: `80%` }}>\r\n            {listPagination.length > 0 ? (\r\n              <>\r\n                <Zoom in={true}>\r\n                  <Grid container spacing={2}>\r\n                    {listPagination.map((i) => (\r\n                      <Item key={i.id} {...i}></Item>\r\n                    ))}\r\n                  </Grid>\r\n                </Zoom>\r\n\r\n                <Pagination\r\n                  className={classes.root}\r\n                  page={currentPage}\r\n                  onChange={paginationHandler}\r\n                  count={pageCount}\r\n                  color=\"secondary\"\r\n                />\r\n              </>\r\n            ) : (\r\n              <Box margin={10} component=\"h4\">\r\n                No Result\r\n              </Box>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItemComponent;\r\n","import {\r\n  makeStyles,\r\n  LinearProgress,\r\n  Box,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ListItemComponent from \"../ListItem/ListItemComponent\";\r\nimport {\r\n  songSelector,\r\n  visibilitySearchList,\r\n  getSongByName,\r\n} from \"../../features/songSlice/songSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& .MuiFilledInput-root\": {\r\n      borderRadius: `unset`,\r\n    },\r\n  },\r\n});\r\n\r\nconst SearchComponent = () => {\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const dispath = useDispatch();\r\n\r\n  const { searchList } = useSelector(songSelector);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    const search_key = searchString.trim();\r\n    if (search_key === \"\") {\r\n      return;\r\n    }\r\n\r\n    await dispath(getSongByName(search_key));\r\n    await dispath(visibilitySearchList());\r\n\r\n    setLoading(false);\r\n\r\n    setSearchString(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: `22px` }}>\r\n        <form onSubmit={handleSearch}>\r\n          <TextField\r\n            color=\"secondary\"\r\n            value={searchString}\r\n            onChange={(e) => {\r\n              setSearchString(e.target.value);\r\n            }}\r\n            className={classes.root}\r\n            variant=\"filled\"\r\n            label=\"What's song you want?\"\r\n            style={{ width: \"80%\" }}\r\n          ></TextField>\r\n        </form>\r\n      </div>\r\n      <div style={{ minHeight: 275 }}>\r\n        {loading === true ? (\r\n          <Box display=\"flex\" justifyContent=\"center\" my={15}>\r\n            <LinearProgress style={{ width: `80%` }} color=\"secondary\" />\r\n          </Box>\r\n        ) : (\r\n            <ListItemComponent\r\n              {...searchList}\r\n              loading={loading}\r\n            ></ListItemComponent>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchComponent;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\nimport { myProxy } from \"../../env\";\r\nimport {\r\n  IoMdPlay,\r\n  IoMdPause,\r\n  IoMdSkipForward,\r\n  IoMdSkipBackward,\r\n  IoMdVolumeHigh,\r\n  IoMdVolumeLow,\r\n  IoMdVolumeMute,\r\n  IoMdRepeat,\r\n} from \"react-icons/io\";\r\n\r\nimport \"./Player.css\";\r\nimport {\r\n  Container,\r\n  Fade,\r\n  Grid,\r\n  Slider,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { VolumeUp } from \"@material-ui/icons\";\r\n\r\nconst CustomSlier = withStyles({\r\n  root: {\r\n    position: \"absolute\",\r\n    padding: \"unset\",\r\n    left: 0,\r\n  },\r\n  thumb: {\r\n    display: \"none\",\r\n  },\r\n})(Slider);\r\n\r\nconst CustomIconButton = withStyles({\r\n  root: {\r\n    padding: `unset`,\r\n  },\r\n})(IconButton);\r\n\r\nconst PlayerComponent = ({ id, name, thumb, artist }) => {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [isPlay, setPlay] = useState(false);\r\n  const [isLoop, setLoop] = useState(false);\r\n\r\n  const [volume, setVolume] = useState({\r\n    show: false,\r\n    value: 0.5,\r\n  });\r\n\r\n  const audioRef = useRef();\r\n\r\n  const handleLoadData = () => {\r\n    setDuration(audioRef.current.duration);\r\n    setCurrentTime(0);\r\n    setPlay(true);\r\n    audioRef.current.play();\r\n  };\r\n\r\n  const handleTimeSliderChange = (e, v) => {\r\n    audioRef.current.currentTime = v;\r\n    setCurrentTime(v);\r\n    if (!isPlay) {\r\n      setPlay(true);\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  const handleChangeVolume = (v) => {\r\n    setVolume({ ...volume, value: v });\r\n    audioRef.current.volume = volume.value;\r\n  };\r\n\r\n  const toggleVolume = () => {\r\n    setVolume({ ...volume, show: !volume.show });\r\n  };\r\n\r\n  const toggleLoop = () => {\r\n    setLoop(!isLoop);\r\n  };\r\n\r\n  const togglePlay = () => {\r\n    if (isPlay) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setPlay(!isPlay);\r\n  };\r\n\r\n  const handleEnded = () => {\r\n    if(isLoop) return;\r\n    \r\n\r\n\r\n  };\r\n\r\n  const src = `${myProxy}stream/?url=http://api.mp3.zing.vn/api/streaming/audio/${id}/320`;\r\n\r\n  return id !== undefined ? (\r\n    <Fade in={true}>\r\n      <div className=\"player-component\">\r\n        <audio\r\n          loop={isLoop}\r\n          ref={audioRef}\r\n          src={src}\r\n          onTimeUpdate={() => setCurrentTime(audioRef.current.currentTime)}\r\n          onEnded={() => handleEnded()}\r\n          onLoadedData={handleLoadData}\r\n        ></audio>\r\n\r\n        <div className=\"audio-player-container\">\r\n          <CustomSlier\r\n            value={currentTime}\r\n            max={duration}\r\n            step={1}\r\n            onChange={(e, v) => handleTimeSliderChange(e, v)}\r\n            color=\"secondary\"\r\n          />\r\n\r\n          <Container className=\"audio-player\" maxWidth=\"lg\">\r\n            <Grid item sm={6} className=\"song-info\">\r\n              <Box display=\"flex\" position=\"relative\" className=\"img-thub\">\r\n                <img\r\n                  src={\r\n                    \"https://photo-resize-zmp3.zadn.vn/w94_r1x1_jpeg/\" + thumb\r\n                  }\r\n                  alt=\"pre-img\"\r\n                />\r\n                <IoMdRepeat\r\n                  onClick={() => toggleLoop()}\r\n                  style={isLoop ? { color: `#f50057` } : {}}\r\n                  className=\"action-icon in-image\"\r\n                />\r\n              </Box>\r\n\r\n              <Grid item className=\"song-info-string\">\r\n                <Typography\r\n                  style={{\r\n                    textTransform: \"capitalize\",\r\n                    fontSize: 18,\r\n                    display: \"inline-block\",\r\n                    whiteSpace: `nowrap`,\r\n                    overflow: `hidden`,\r\n                    width: `100%`,\r\n                    textOverflow: `ellipsis`,\r\n                    color: \"#ffff\",\r\n                  }}\r\n                  component=\"h6\"\r\n                >\r\n                  {name}\r\n                </Typography>\r\n                <Typography\r\n                  style={{\r\n                    textTransform: \"capitalize\",\r\n                    fontSize: 13,\r\n                    display: \"inline-block\",\r\n                    whiteSpace: `nowrap`,\r\n                    overflow: `hidden`,\r\n                    width: `100%`,\r\n                    textOverflow: `ellipsis`,\r\n                    color: \"#ffff\",\r\n                  }}\r\n                  variant=\"subtitle1\"\r\n                >\r\n                  {artist}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item sm={6} className=\"action\">\r\n              <CustomIconButton size=\"medium\">\r\n                <IoMdSkipBackward className=\"action-icon\" />\r\n              </CustomIconButton>\r\n              {/* <IoMdPlay style={iconStyles} /> */}\r\n              <CustomIconButton size=\"medium\" onClick={() => togglePlay()}>\r\n                {isPlay ? (\r\n                  <IoMdPause className=\"action-icon\" />\r\n                ) : (\r\n                  <IoMdPlay className=\"action-icon\" />\r\n                )}\r\n              </CustomIconButton>\r\n              <CustomIconButton size=\"medium\">\r\n                <IoMdSkipForward className=\"action-icon\" />\r\n              </CustomIconButton>\r\n              <div style={{ position: \"relative\", display: \"inline-block\" }}>\r\n                <CustomIconButton size=\"medium\" onClick={() => toggleVolume()}>\r\n                  <IoMdVolumeHigh className=\"action-icon\"></IoMdVolumeHigh>\r\n                </CustomIconButton>\r\n\r\n                {volume.show && (\r\n                  <Fade in={true} timeout={1000}>\r\n                    <span\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: 40,\r\n                        left: 10,\r\n                        width: 28,\r\n                        height: 90,\r\n                        borderRadius: `50px`,\r\n                        background: \"whitesmoke\",\r\n                        padding: \" 12px 0px \",\r\n                      }}\r\n                    >\r\n                      <Slider\r\n                        orientation=\"vertical\"\r\n                        color=\"secondary\"\r\n                        value={volume.value}\r\n                        max={1}\r\n                        step={0.01}\r\n                        onChange={(event, value) => handleChangeVolume(value)}\r\n                      />\r\n                    </span>\r\n                  </Fade>\r\n                )}\r\n              </div>\r\n\r\n              {/* <IoMdVolumeLow style={iconStyles} />\r\n        <IoMdVolumeMute style={iconStyles} /> */}\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </Fade>\r\n  ) : null;\r\n};\r\n\r\nexport default PlayerComponent;\r\n","import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport { Menu } from \"@material-ui/icons\";\r\nimport React from 'react';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport SearchComponent from './components/Search/SearchComponent';\r\nimport PlayerComponent from './components/Player/PlayerComponent';\r\nimport { useSelector } from 'react-redux';\r\nimport { songSelector } from './features/songSlice/songSlice'\r\n\r\n\r\n\r\nfunction App() {\r\n  const { currentSong } = useSelector(songSelector)\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n        <AppBar color=\"secondary\">\r\n          <Toolbar>\r\n            <IconButton>\r\n              <Menu />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" style={{color:'#ffff'}} component=\"h2\">\r\n              320KBps\r\n              </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n      </div>\r\n      <div className=\"app-main\">\r\n        <Typography variant=\"h3\" component=\"div\" style={{ padding: \"80px\", fontWeight: 'bold', color: `whitesmoke` }}>Music with 320KBps</Typography>\r\n        <div className=\"search-component\" >\r\n          <SearchComponent />\r\n        </div>\r\n\r\n        <PlayerComponent  {...currentSong} />\r\n\r\n      </div>\r\n      <div className=\"app-footer\">\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport songReducer from '../features/songSlice/songSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    song: songReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}