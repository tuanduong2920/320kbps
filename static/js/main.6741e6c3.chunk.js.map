{"version":3,"sources":["router.js","components/NavigationBar/NavigationBar.js","components/AppHeader/Appheader.js","components/Player/PlayerComponent.js","App.js","app/store.js","serviceWorker.js","index.js","features/songSlice/songSlice.js","env.js","api/axiosClient.js","features/searchSlice/soundCloudSlice.js","api/zmp3/SongApi.js","features/searchSlice/zingMp3Slice.js","api/youtube/YouTubeApi.js","features/searchSlice/youTubeSlice.js"],"names":["router","path","component","lazy","exact","name","icon","fontSize","style","color","useStyles","makeStyles","list","width","fullList","navColor","backgroundColor","NavigationBar","anchor","isShow","setShowList","children","classes","toggleDrawer","open","event","type","key","SwipeableDrawer","onClose","onOpen","paper","className","role","theme","root","flexGrow","menuButton","marginRight","spacing","title","textOver","display","whiteSpace","overflow","textOverflow","AppHeader","playlist","useState","isShowList","isShowNav","setShowNav","dispatch","useDispatch","addCurrentSong","item","adcrs","AppBar","Toolbar","IconButton","onClick","Menu","Typography","variant","aria-label","aria-controls","aria-haspopup","List","Router","map","index","to","ListItem","button","ListItemIcon","ListItemText","primary","secondary","Divider","length","artist","ListItemSecondaryAction","id","rm","edge","flexDirection","alignItems","justifyContent","height","opacity","CustomSlier","withStyles","position","padding","left","thumb","Slider","CustomIconButton","PlayerComponent","src","currentTime","setCurrentTime","duration","setDuration","isPlay","setPlay","isLoop","setLoop","show","value","volume","setVolume","audioRef","useRef","undefined","Fade","in","loop","ref","onTimeUpdate","current","onEnded","onLoadedData","play","max","step","onChange","e","v","console","log","handleTimeSliderChange","Container","maxWidth","Grid","sm","Box","alt","textTransform","size","pre","pause","nex","timeout","bottom","borderRadius","background","orientation","App","useSelector","songSelector","queueList","currentSong","basename","fallback","CircularProgress","Routes","route","configureStore","reducer","song","songReducer","mp3Search","mp3SearchReducer","soundCloudSearch","soundCloudReducer","youTubeSearch","youTubeReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","songSlice","createSlice","initialState","reducers","state","action","payload","addQueueAndPlay","arr","findIndex","i","unshift","addQueue","push","removeSong","itemIndex","slice","nextSong","currentSongIndex","preSong","actions","myProxy","httpProxy","axiosClient","axios","create","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","response","status","data","error","soundcloundSlice","searchList","visibility","test","SC","connect","SearchbyName","string","stringQuery","trim","get","getSongByName","createAsyncThunk","songName","arrRes","zingMp3Slice","visibilitySearchList","extraReducers","fulfilled","mp3Reducer","mp3Selector","SearchByName","process","res","items","arrItems","videoId","snippet","channelTitle","thumbnails","medium","url","youTubeSlice","youTubeSelector"],"mappings":"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","file":"static/js/main.6741e6c3.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\nimport { ImSoundcloud, ImMusic, ImYoutube } from \"react-icons/im\";\r\nconst router = [\r\n  {\r\n    path: \"/\",\r\n    component: lazy(() => import(\"./Page/ZingMp3/ZingMp3\")),\r\n    exact: true,\r\n    name: \"Mp3\",\r\n    icon: <ImMusic fontSize={25} style={{color:`#fff`}} />,\r\n  },\r\n  {\r\n    path: \"/sound-cloud\",\r\n    component: lazy(() => import(\"./Page/SoundCloud/SoundCloud\")),\r\n    exact: true,\r\n    name: \"Sound Cloud\",\r\n    icon: <ImSoundcloud fontSize={25} style={{color:`#fff`}} />,\r\n  },\r\n  {\r\n    path: \"/you-tube\",\r\n    component: lazy(() => import(\"./Page/YouTube/YouTube\")),\r\n    exact: true,\r\n    name: \"YouTube\",\r\n    icon: <ImYoutube fontSize={25} style={{color:`#fff`}} />,\r\n  }\r\n\r\n];\r\n\r\nexport default router;\r\n","import { SwipeableDrawer } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\n// import { IoMdPause, IoMdPlay, IoMdRemove } from \"react-icons/io\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 280,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  navColor: {\r\n    backgroundColor: `#424242`,\r\n  },\r\n});\r\n\r\nconst NavigationBar = ({ anchor, isShow, setShowList, children }) => {\r\n  const classes = useStyles();\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setShowList(open);\r\n  };\r\n\r\n  const list = () => (\r\n    <div className={classes.list} role=\"presentation\">\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SwipeableDrawer\r\n        anchor={anchor}\r\n        open={isShow}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n        classes={{\r\n          paper:classes.navColor\r\n        }}\r\n      >\r\n        {list()}\r\n      </SwipeableDrawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Toolbar,\r\n  Typography,\r\n  Divider,\r\n  List,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\n\r\nimport { IoMdMusicalNote } from \"react-icons/io\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport {\r\n  addCurrentSong as adcrs,\r\n  removeSong as rm,\r\n} from \"../../features/songSlice/songSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Router from \"../../router\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  textOver: {\r\n    width: `100%`,\r\n    display: \"inline-block\",\r\n    whiteSpace: `nowrap`,\r\n    overflow: `hidden`,\r\n    textOverflow: `ellipsis`,\r\n    color: `#fff`,\r\n  },\r\n}));\r\n\r\nconst AppHeader = ({ playlist }) => {\r\n  const [isShowList, setShowList] = useState(false);\r\n  const [isShowNav, setShowNav] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const addCurrentSong = (item) => {\r\n    dispatch(adcrs(item));\r\n  };\r\n\r\n  const removeSong = (id) => {\r\n    dispatch(rm(id));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar color=\"secondary\">\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={() => setShowNav(!isShowNav)}\r\n            className={classes.menuButton}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h5\"\r\n            style={{ color: \"#ffff\" }}\r\n            component=\"h2\"\r\n          >\r\n            320KBps\r\n          </Typography>\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            onClick={() => setShowList(!isShowList)}\r\n          >\r\n            <IoMdMusicalNote></IoMdMusicalNote>\r\n          </IconButton>\r\n          <NavigationBar\r\n            anchor=\"left\"\r\n            setShowList={setShowNav}\r\n            isShow={isShowNav}\r\n          >\r\n            <List>\r\n              {Router.map((item, index) => (\r\n                <NavLink key={index} to={item.path}>\r\n                  <ListItem button style={{ color: `#fff` }}>\r\n                    <ListItemIcon>{item.icon}</ListItemIcon>\r\n                    <ListItemText\r\n                      classes={{\r\n                        primary: classes.textOver,\r\n                        secondary: classes.textOver,\r\n                      }}\r\n                      primary={item.name}\r\n                    />\r\n                  </ListItem>\r\n                </NavLink>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n          </NavigationBar>\r\n\r\n          <NavigationBar\r\n            anchor=\"right\"\r\n            setShowList={setShowList}\r\n            isShow={isShowList}\r\n          >\r\n            <List>\r\n              {playlist.length > 0 ? (\r\n                playlist.map((item, index) => (\r\n                  <ListItem button key={index}>\r\n                    <ListItemIcon\r\n                      onClick={() => addCurrentSong(item)}\r\n                      style={{ color: `#fff` }}\r\n                    >\r\n                      <PlayArrowIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      onClick={() => addCurrentSong(item)}\r\n                      classes={{\r\n                        primary: classes.textOver,\r\n                        secondary: classes.textOver,\r\n                      }}\r\n                      primary={item.name}\r\n                      secondary={item.artist ? item.artist : null}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton\r\n                        onClick={() => removeSong(item.id)}\r\n                        edge=\"end\"\r\n                        aria-label=\"delete\"\r\n                        style={{ color: `#fff` }}\r\n                      >\r\n                        <RemoveIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: 300,\r\n                    opacity: 0.6,\r\n                  }}\r\n                >\r\n                  <Typography component=\"span\" variant=\"subtitle2\">\r\n                    Null\r\n                  </Typography>\r\n                </div>\r\n              )}\r\n            </List>\r\n          </NavigationBar>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  IoMdPlay,\r\n  IoMdPause,\r\n  IoMdSkipForward,\r\n  IoMdSkipBackward,\r\n  IoMdVolumeHigh,\r\n  IoMdVolumeLow,\r\n  IoMdVolumeMute,\r\n  IoMdRepeat,\r\n} from \"react-icons/io\";\r\n\r\nimport \"./Player.css\";\r\nimport {\r\n  Container,\r\n  Fade,\r\n  Grid,\r\n  Slider,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  nextSong as nex,\r\n  preSong as pre,\r\n} from \"../../features/songSlice/songSlice\";\r\n\r\nconst CustomSlier = withStyles({\r\n  root: {\r\n    position: \"absolute\",\r\n    padding: \"unset\",\r\n    left: 0,\r\n  },\r\n  thumb: {\r\n    display: \"none\",\r\n  },\r\n})(Slider);\r\n\r\nconst CustomIconButton = withStyles({\r\n  root: {\r\n    padding: `unset`,\r\n  },\r\n})(IconButton);\r\n\r\nconst PlayerComponent = ({ src, name, thumb, artist }) => {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [isPlay, setPlay] = useState(false);\r\n  const [isLoop, setLoop] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [volume, setVolume] = useState({\r\n    show: false,\r\n    value: 1,\r\n  });\r\n\r\n  const audioRef = useRef();\r\n\r\n  const handleLoadData = () => {\r\n    setDuration(audioRef.current.duration);\r\n    setCurrentTime(0);\r\n    setPlay(true);\r\n    audioRef.current.play();\r\n  };\r\n\r\n  const handleTimeSliderChange = (e, v) => {\r\n    console.log(v);\r\n    audioRef.current.currentTime = v;\r\n    // setCurrentTime(v);\r\n    if (!isPlay) {\r\n      setPlay(true);\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  const handleChangeVolume = (v) => {\r\n    setVolume({ ...volume, value: v });\r\n    audioRef.current.volume = volume.value;\r\n  };\r\n\r\n  const toggleVolume = () => {\r\n    setVolume({ ...volume, show: !volume.show });\r\n  };\r\n\r\n  const toggleLoop = () => {\r\n    setLoop(!isLoop);\r\n  };\r\n\r\n  const togglePlay = () => {\r\n    if (isPlay) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setPlay(!isPlay);\r\n  };\r\n\r\n  const handleEnded = () => {\r\n    if (isLoop) return;\r\n  };\r\n\r\n  const nextSong = () => {\r\n    dispatch(nex());\r\n  };\r\n\r\n  const preSong = () => {\r\n    dispatch(pre());\r\n  };\r\n\r\n  // const src = `${myProxy}stream/?url=http://api.mp3.zing.vn/api/streaming/audio/${id}/320`;\r\n\r\n  return src !== undefined ? (\r\n    <Fade in={true}>\r\n      <div className=\"player-component\">\r\n        <audio\r\n          loop={isLoop}\r\n          ref={audioRef}\r\n          src={src}\r\n          onTimeUpdate={() => setCurrentTime(audioRef.current.currentTime)}\r\n          onEnded={() => handleEnded()}\r\n          onLoadedData={handleLoadData}\r\n        ></audio>\r\n\r\n        <div className=\"audio-player-container\">\r\n          <CustomSlier\r\n            value={currentTime}\r\n            max={duration}\r\n            step={1}\r\n            onChange={(e, v) => handleTimeSliderChange(e, v)}\r\n            color=\"secondary\"\r\n          />\r\n\r\n          <Container className=\"audio-player\" maxWidth=\"lg\">\r\n            <Grid item sm={6} className=\"song-info\">\r\n              <Box display=\"flex\" position=\"relative\" className=\"img-thub\">\r\n                <img src={thumb} alt=\"pre-img\" />\r\n                <IoMdRepeat\r\n                  onClick={() => toggleLoop()}\r\n                  style={isLoop ? { color: `#f50057` } : {}}\r\n                  className=\"action-icon in-image\"\r\n                />\r\n              </Box>\r\n\r\n              <Grid item className=\"song-info-string\">\r\n                <Typography\r\n                  style={{\r\n                    textTransform: \"capitalize\",\r\n                    fontSize: 18,\r\n                    display: \"inline-block\",\r\n                    whiteSpace: `nowrap`,\r\n                    overflow: `hidden`,\r\n                    width: `100%`,\r\n                    textOverflow: `ellipsis`,\r\n                    color: \"#ffff\",\r\n                  }}\r\n                  component=\"h6\"\r\n                >\r\n                  {name}\r\n                </Typography>\r\n                <Typography\r\n                  style={{\r\n                    textTransform: \"capitalize\",\r\n                    fontSize: 13,\r\n                    display: \"inline-block\",\r\n                    whiteSpace: `nowrap`,\r\n                    overflow: `hidden`,\r\n                    width: `100%`,\r\n                    textOverflow: `ellipsis`,\r\n                    color: \"#ffff\",\r\n                  }}\r\n                  variant=\"subtitle1\"\r\n                >\r\n                  {artist}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item sm={6} className=\"action\">\r\n              <CustomIconButton size=\"medium\" onClick={() => preSong()}>\r\n                <IoMdSkipBackward className=\"action-icon\" />\r\n              </CustomIconButton>\r\n              {/* <IoMdPlay style={iconStyles} /> */}\r\n              <CustomIconButton size=\"medium\" onClick={() => togglePlay()}>\r\n                {isPlay ? (\r\n                  <IoMdPause className=\"action-icon\" />\r\n                ) : (\r\n                  <IoMdPlay className=\"action-icon\" />\r\n                )}\r\n              </CustomIconButton>\r\n              <CustomIconButton size=\"medium\" onClick={() => nextSong()}>\r\n                <IoMdSkipForward className=\"action-icon\" />\r\n              </CustomIconButton>\r\n              <div style={{ position: \"relative\", display: \"inline-block\" }}>\r\n                <CustomIconButton size=\"medium\" onClick={() => toggleVolume()}>\r\n                  {volume.value > 0.5 ? (\r\n                    <IoMdVolumeHigh className=\"action-icon\"></IoMdVolumeHigh>\r\n                  ) : volume.value < 0.5 && volume.value > 0 ? (\r\n                    <IoMdVolumeLow className=\"action-icon\"></IoMdVolumeLow>\r\n                  ) : (\r\n                    <IoMdVolumeMute className=\"action-icon\"></IoMdVolumeMute>\r\n                  )}\r\n                </CustomIconButton>\r\n\r\n                <Fade in={volume.show} timeout={1000}>\r\n                  <span\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 40,\r\n                      left: 10,\r\n                      width: 28,\r\n                      height: 90,\r\n                      borderRadius: `50px`,\r\n                      background: \"whitesmoke\",\r\n                      padding: \" 12px 0px \",\r\n                    }}\r\n                  >\r\n                    <Slider\r\n                      style={{ padding: `0 13px` }}\r\n                      orientation=\"vertical\"\r\n                      color=\"secondary\"\r\n                      value={volume.value}\r\n                      max={1}\r\n                      step={0.01}\r\n                      onChange={(event, value) => handleChangeVolume(value)}\r\n                    />\r\n                  </span>\r\n                </Fade>\r\n              </div>\r\n\r\n              {/* <IoMdVolumeLow style={iconStyles} />\r\n        <IoMdVolumeMute style={iconStyles} /> */}\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </Fade>\r\n  ) : null;\r\n};\r\n\r\nexport default PlayerComponent;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"fontsource-roboto\";\r\nimport Routes from \"./router\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { songSelector } from \"./features/songSlice/songSlice\";\r\nimport AppHeader from \"./components/AppHeader/Appheader\";\r\n// import ZingMp3 from \"./Page/ZingMp3/ZingMp3\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\nimport PlayerComponent from \"./components/Player/PlayerComponent\";\r\nimport { CircularProgress  } from \"@material-ui/core\";\r\n\r\nfunction App() {\r\n  const { queueList, currentSong } = useSelector(songSelector);\r\n\r\n  return (\r\n    <Router basename=\"320kbps\" >\r\n      <div className=\"App\">\r\n        <AppHeader playlist={queueList} />\r\n\r\n        <div className=\"app-main\">\r\n          <Suspense fallback={<CircularProgress  color=\"secondary\" ></CircularProgress >}>\r\n            <Switch>\r\n              {Routes.map((route) => (\r\n                <Route\r\n                  key={route.path}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                  exact={route.exact}\r\n                />\r\n              ))}\r\n            </Switch>\r\n          </Suspense>\r\n\r\n          <PlayerComponent {...currentSong} />\r\n          {/* <ZingMp3></ZingMp3> */}\r\n        </div>\r\n        <div className=\"app-footer\"></div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport songReducer from \"../features/songSlice/songSlice\";\r\nimport mp3SearchReducer from \"../features/searchSlice/zingMp3Slice\";\r\nimport soundCloudReducer from \"../features/searchSlice/soundCloudSlice\";\r\nimport youTubeReducer from \"../features/searchSlice/youTubeSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    song: songReducer,\r\n    mp3Search: mp3SearchReducer,\r\n    soundCloudSearch: soundCloudReducer,\r\n    youTubeSearch: youTubeReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst songSlice = createSlice({\r\n  name: \"song\",\r\n  initialState: {\r\n    currentSong: null,\r\n    queueList: [],\r\n  },\r\n  reducers: {\r\n    addCurrentSong: (state, action) => {\r\n      \r\n      state.currentSong = action.payload;\r\n    },\r\n    addQueueAndPlay: (state, action) => {\r\n      state.currentSong = action.payload;\r\n      let arr = [...state.queueList];\r\n      const itemIndex = arr.findIndex((i) => i.id === action.payload.id);\r\n\r\n      if (itemIndex !== -1) {\r\n        state.queueList = arr;\r\n        return;\r\n      }\r\n      arr.unshift(action.payload);\r\n      state.queueList = arr;\r\n    },\r\n    addQueue: (state, action) => {\r\n      let arr = [...state.queueList];\r\n      const itemIndex = arr.findIndex((i) => i.id === action.payload.id);\r\n\r\n      if (itemIndex !== -1) {\r\n        return;\r\n      }\r\n      arr.push(action.payload);\r\n      state.queueList = arr;\r\n      console.log(state.queueList);\r\n    },\r\n    removeSong: (state, action) => {\r\n      let arr = [...state.queueList];\r\n      const itemIndex = arr.findIndex((i) => i.id === action.payload);\r\n      arr = [...arr.slice(0, itemIndex), ...arr.slice(itemIndex + 1)];\r\n      state.queueList = arr;\r\n    },\r\n    nextSong: (state) => {\r\n      if (state.currentSong === null) return;\r\n      const currentSongIndex = state.queueList.findIndex(\r\n        (i) => i.id === state.currentSong.id\r\n      );\r\n\r\n      if (state.queueList[currentSongIndex + 1] === undefined) return;\r\n      state.currentSong = state.queueList[currentSongIndex + 1];\r\n    },\r\n    preSong: (state, action) => {\r\n      if (state.currentSong === null) return;\r\n      const currentSongIndex = state.queueList.findIndex(\r\n        (i) => i.id === state.currentSong.id\r\n      );\r\n      if (state.queueList[currentSongIndex - 1] === undefined) return;\r\n      state.currentSong = state.queueList[currentSongIndex - 1];\r\n    }\r\n  },\r\n});\r\n\r\n\r\n//reducer\r\nconst songReducer = songSlice.reducer;\r\n\r\nexport const songSelector = (state) => state.song;\r\n\r\nexport const {\r\n  addCurrentSong,\r\n  addQueue,\r\n  addQueueAndPlay,\r\n  nextSong,\r\n  preSong,\r\n  removeSong,\r\n} = songSlice.actions;\r\n\r\nexport default songReducer;\r\n","export const alloworigin = \"https://api.allorigins.win/raw?url=\";\r\nexport const proxy = \"https://thingproxy.freeboard.io/fetch/\";\r\nexport const whateverorigin = \"http://www.whateverorigin.org/get?url=\";\r\nexport const myProxy = \"https://proxy-306409.an.r.appspot.com/\"\r\nexport const localhost = \"http://localhost:3001/\";\r\nexport const httpProxy =\"https://httpproxy-306604.an.r.appspot.com/\"\r\n\r\n","import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nconst axiosClient = axios.create({\r\n  headers: {\r\n    \"content-type\": \"application/json\"\r\n  },\r\n  paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.status === 200 && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    throw error;\r\n  }\r\n);\r\n\r\n\r\nexport default axiosClient;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport SC from 'soundcloud';\r\n\r\nconst soundcloundSlice = createSlice({\r\n  name: \"soundCloud\",\r\n  initialState: {\r\n    searchList: {\r\n      list: [],\r\n      visibility: false,\r\n    },\r\n  },\r\n  reducers: {\r\n    test: () => {\r\n      try{\r\n        SC.connect();\r\n        console.log(\"sound clound test\");\r\n      }\r\n      catch(e){\r\n        console.log(e);\r\n      }\r\n      \r\n      \r\n    },\r\n    // visibilitySearchList,\r\n  },\r\n});\r\n\r\nconst soundCloudReducer = soundcloundSlice.reducer;\r\nexport const soundCloudSelector = (state) => state.soundCloudSearch;\r\n\r\nexport const { test } = soundcloundSlice.actions;\r\n\r\nexport default soundCloudReducer;\r\n","import axiosClient from \"../axiosClient\";\r\nimport { httpProxy } from \"../../env\";\r\n\r\n\r\nexport const SearchbyName = async (string) => {\r\n  try {\r\n    if (typeof string !== \"string\") {\r\n      return;\r\n    }\r\n    const stringQuery = string.trim();\r\n    const response = await axiosClient.get(\r\n      `${httpProxy}fetch/http://ac.mp3.zing.vn/complete?type=artist,song,key,code&num=500&query=${stringQuery}`\r\n    );\r\n  \r\n    return response.data\r\n   \r\n  } catch (error) {\r\n    throw error\r\n  }\r\n};\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { SearchbyName } from \"../../api/zmp3/SongApi\";\r\nimport { myProxy } from \"../../env\";\r\n\r\nexport const getSongByName = createAsyncThunk(\r\n  \"mp3/getSongByName\",\r\n  async (songName) => {\r\n    try {\r\n      const response = await SearchbyName(songName);\r\n      console.log(\"response\", response);\r\n      if (\r\n        response[0] === undefined ||\r\n        response[0].length === 0 ||\r\n        response[0].song === undefined\r\n      ) {\r\n        return;\r\n      }\r\n      const data = response[0].song ? response[0].song : [];\r\n      const arrRes =  data.map((i) => {\r\n        return {\r\n          id: i.id,\r\n          name: i.name,\r\n          artist: i.artist,\r\n          thumb: `https://photo-resize-zmp3.zadn.vn/w94_r1x1_jpeg/${i.thumb}`,\r\n          src:`${myProxy}stream/?url=http://api.mp3.zing.vn/api/streaming/audio/${i.id}/320`\r\n        };\r\n      });\r\n      return arrRes;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nconst zingMp3Slice = createSlice({\r\n  name: \"mp3\",\r\n  initialState: {\r\n    searchList: {\r\n      list: [],\r\n      visibility: false,\r\n    },\r\n  },\r\n  reducers: {\r\n \r\n    visibilitySearchList: (state) => {\r\n      state.searchList.visibility = true;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getSongByName.fulfilled]: (state, action) => {\r\n      \r\n      state.searchList.list = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst mp3Reducer = zingMp3Slice.reducer;\r\nexport const mp3Selector = (state) => state.mp3Search;\r\n\r\nexport const { visibilitySearchList } = zingMp3Slice.actions;\r\n\r\nexport default mp3Reducer;\r\n","import axiosClient from \"../axiosClient\";\r\n\r\nconst YOUTUBE_API_CURL = \"https://youtube.googleapis.com/youtube/v3\";\r\n\r\nexport const SearchByName = async (string) => {\r\n  try {\r\n    const res = await axiosClient.get(\r\n      `${YOUTUBE_API_CURL}/search?part=snippet&q=${string}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { SearchByName } from \"../../api/youtube/YouTubeApi\";\r\nimport { myProxy } from \"../../env\";\r\n\r\nexport const getSongByName = createAsyncThunk(\r\n  \"youTube/getSongByName\",\r\n  async (string) => {\r\n    try {\r\n      const { items } = await SearchByName(string);\r\n      const arrItems = items.map((i) => {\r\n        return {\r\n          id: i.id.videoId,\r\n          name: i.snippet.title,\r\n          artist: i.snippet.channelTitle,\r\n          thumb: i.snippet.thumbnails.medium.url,\r\n          src:`${myProxy}yt/audio/?id=${i.id.videoId}`\r\n        };\r\n      });\r\n\r\n      return arrItems;\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  }\r\n);\r\n\r\nconst youTubeSlice = createSlice({\r\n  name: \"soundCloud\",\r\n  initialState: {\r\n    searchList: {\r\n      list: [],\r\n      visibility: false,\r\n    },\r\n  },\r\n  reducers: {\r\n  \r\n    visibilitySearchList: (state) => {\r\n      state.searchList.visibility = true;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getSongByName.fulfilled]: (state, action) => {\r\n      state.searchList.list = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst youTubeReducer = youTubeSlice.reducer;\r\nexport const youTubeSelector = (state) => state.youTubeSearch;\r\n\r\nexport const { visibilitySearchList } = youTubeSlice.actions;\r\n\r\nexport default youTubeReducer;\r\n"],"sourceRoot":""}